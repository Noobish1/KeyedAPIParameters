disabled_rules:
  - identifier_name
  - switch_case_alignment
opt_in_rules:
  - force_unwrapping
  - attributes
  - file_header
  - prohibited_super_call
  - closure_spacing
  - explicit_init
  - first_where
  - nimble_operator
  - overridden_super_call
  - private_outlet
  - redundant_nil_coalescing
  - fatal_error_message
  - explicit_top_level_acl
  - implicit_return
  - empty_count
  - array_init
  - closure_end_indentation
  - contains_over_first_not_nil
  - let_var_whitespace
  - literal_expression_end_indentation
  - operator_usage_whitespace
  - override_in_extension
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - single_test_class
  - sorted_first_last
  - unneeded_parentheses_in_closure_argument
  - vertical_parameter_alignment_on_call
  - explicit_acl
  - private_action
  - sorted_imports
  - yoda_condition
included:
  - KeyedAPIParameters
cyclomatic_complexity:
  ignores_case_statements: true
trailing_whitespace:
  ignores_empty_lines: true
colon:
  apply_to_dictionaries: false
line_length: 200
file_length:
  - 500 # warning
  - 750 # error
function_body_length:
  - 100 # warning
  - 200 # error
type_body_length:
  - 500 # warning
  - 600 # error
type_name:
  min_length: 2 # only warning
  max_length: # warning and error
    warning: 50
    error: 60
custom_rules:
  protocol_acls:
    name: "Protocol ACLs"
    regex: '^protocol'
    message: "protocols should have ACLs"
    severity: error
